Как работать с двух аккаунтов GitHub на одном ПК (имитация работы команды)
Чтобы имитировать работу команды на одном компьютере, используя два разных аккаунта GitHub, нужно правильно настроить Git и SSH-ключи для каждого аккаунта и разделить рабочие каталоги. Вот пошаговая инструкция:

1. Создайте отдельные SSH-ключи для каждого аккаунта

Для первого аккаунта (например, рабочий):

bash
ssh-keygen -t ed25519 -C "work@example.com" -f ~/.ssh/id_ed25519_work
Для второго аккаунта (например, личный):

bash
ssh-keygen -t ed25519 -C "personal@example.com" -f ~/.ssh/id_ed25519_personal
Добавьте оба публичных ключа в соответствующие аккаунты GitHub через настройки SSH-ключей.

2. Настройте SSH config

В файле ~/.ssh/config пропишите:

text
# Рабочий аккаунт
Host github-work
  HostName github.com
  User git
  IdentityFile ~/.ssh/id_ed25519_work

# Личный аккаунт
Host github-personal
  HostName github.com
  User git
  IdentityFile ~/.ssh/id_ed25519_personal
Теперь при клонировании или работе с репозиториями используйте соответствующий Host, например:

Для рабочего: git@github-work:workuser/repo.git

Для личного: git@github-personal:personaluser/repo.git.

3. Разделите рабочие каталоги

Для удобства создайте две папки, например:

~/work — для рабочего аккаунта

~/hobby — для личного аккаунта

4. Настройте Git-конфиги для разных папок

В домашней директории создайте отдельные конфиги:

~/.gitconfig-work:

text
[user]
  name = Work Name
  email = work@example.com
~/.gitconfig-personal:

text
[user]
  name = Personal Name
  email = personal@example.com
В основном ~/.gitconfig добавьте:

text
[includeIf "gitdir:~/work/"]
  path = ~/.gitconfig-work
[includeIf "gitdir:~/hobby/"]
  path = ~/.gitconfig-personal
Теперь при работе в каждой папке Git будет использовать нужные имя и email.

5. Клонирование и работа с репозиториями

Клонируйте рабочие репозитории с помощью git@github-work:..., а личные — через git@github-personal:....

В каждом каталоге будут использоваться свои учетные данные и SSH-ключи.

6. Проверка

В нужной папке выполните:

bash
git config user.name
git config user.email
Вы увидите имя и email, соответствующие выбранному аккаунту.

Итог:
Такой подход позволит вам на одном ПК работать с двумя (или более) аккаунтами GitHub, полностью разделяя их настройки, ключи и каталоги, что отлично имитирует работу двух членов команды или работу в разных ролях.

Важно: Следите за тем, чтобы не перепутать каталоги, иначе можно случайно закоммитить от "не того" пользователя.
Также, если используете HTTPS, настройте credential helper или используйте только SSH для удобства переключения между аккаунтами.